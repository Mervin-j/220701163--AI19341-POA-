def minimax(depth, node_index, is_maximizing, scores, height):
    # Base case: if we have reached the leaf node
    if depth == height:
        return scores[node_index]

    if is_maximizing:
        # Maximizer's turn: choose the maximum value
        return max(
            minimax(depth + 1, node_index * 2, False, scores, height),
            minimax(depth + 1, node_index * 2 + 1, False, scores, height)
        )
    else:
        # Minimizer's turn: choose the minimum value
        return min(
            minimax(depth + 1, node_index * 2, True, scores, height),
            minimax(depth + 1, node_index * 2 + 1, True, scores, height)
        )

def main():
    # Terminal node values
    scores = [3, 5, 6, 9, 1, 2, 0, -1]
    tree_height = 3  # Log2(len(scores))

    # Starting the Minimax algorithm
    result = minimax(0, 0, True, scores, tree_height)
    print(f"The optimal value is: {result}")

if __name__ == "__main__":
    main()
